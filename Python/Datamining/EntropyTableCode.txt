HTemp = CM(df) #.sort_values(by='Phi', ascending=False)
HTemp = HTemp.drop(['TP-FP', 'TP%-FP%','Acc', 'Phi'], axis=1)
HTemp['n(tL)'] = HTemp.apply(lambda row: row.TP + row.FP, axis = 1)
HTemp['n(tR)'] = HTemp.apply(lambda row: row.TN + row.FN, axis = 1)
HTemp['n(tL, C)'] = HTemp.apply(lambda row: row.TP, axis = 1)
HTemp['n(tL, NC)'] = HTemp.apply(lambda row: row.FP, axis = 1)
HTemp['PL'] = HTemp.apply(lambda row: (row.TP + row.FP)/(row.TP + row.FP + row.TN + row.FN), axis = 1)
HTemp['PR'] = HTemp.apply(lambda row: (row.TN + row.FN)/(row.TP + row.FP + row.TN + row.FN), axis = 1)
#HTemp['H(t).'] = HTemp.apply(lambda row: findEnt(row.TP, row.FP, row.TN, row.FN), axis = 1)
HTemp['Hst'] = HTemp.apply(lambda row: findHST(row.TP, row.FP, row.TN, row.FN) , axis = 1)
HTemp['gains'] = HTemp.apply(lambda row: row.Entropy - row.Hst, axis = 1)

HTemp.sort_values(by='gains', ascending=False).to_csv('demo.csv')